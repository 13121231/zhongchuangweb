package cn.edu.njupt.bigdata.action;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.sql.SQLException;
import java.util.Iterator;
import java.util.List;
import java.util.Properties;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.MimeMessage;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileItemFactory;
import org.apache.commons.fileupload.FileUploadBase;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;

import com.jspsmart.upload.SmartFiles;
import com.jspsmart.upload.SmartUpload;
import com.jspsmart.upload.SmartUploadException;

import cn.edu.njupt.bigdata.bean.AdminProjectBean;
import cn.edu.njupt.bigdata.bean.ProjectBean;
import cn.edu.njupt.bigdata.bean.ProjectFileBean;
import cn.edu.njupt.bigdata.dao.ProjectDao;
import cn.edu.njupt.bigdata.dao.ProjectFileDao;
import cn.edu.njupt.bigdata.service.AddProjectFileService;
import cn.edu.njupt.bigdata.service.QueryUserService;
import cn.edu.njupt.bigdata.service.SendMailService;
import cn.edu.njupt.bigdata.service.AdminService;
import cn.edu.njupt.bigdata.service.QueryProjectService;
import cn.edu.njupt.bigdata.utils.ConstCodeUtils;

/**
 * Servlet implementation class UIApplyServlet
 */
@WebServlet("/UIApplyServlet")
public class UIApplyServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private ServletRequest session;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public UIApplyServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String UI1SuccessPath = request.getContextPath() + "/servlet/user/ShowIndexPageServlet";
		String UI1ErrorPath = request.getContextPath() + "/servlet/user/ShowIndexPageServlet";
		String path =request.getServletContext().getRealPath(ConstCodeUtils.PROJECT_FILES_PATH);
		System.out.println(path);
		String zippath =request.getServletContext().getRealPath(ConstCodeUtils.TEMP);
		String userNo = (String) request.getSession().getAttribute("userNo");
		int fileState = 0;
		System.out.println(userNo);
		DiskFileItemFactory factory = new DiskFileItemFactory();
		ServletFileUpload upload = new ServletFileUpload(factory);
		request.setAttribute("forwardSecond", "3");
		if(!upload.isMultipartContent(request)) {
			return;
		}
		try {
			 String programName = null;
			 //String programNo = null;
			 String author = null;
			 //String phoneNumber = null;
			 //String verifyCode = null;
			 //String programemail = null;
			 //String programType = null;
			//吴道亮  2016.05.29↓ 添加
			 ProjectDao projectDao = new ProjectDao();
			 //ProjectFileDao projectFileDao = null;
			//吴道亮  2016.05.29↑ 添加
			 List<FileItem> list = upload.parseRequest(request);
			 for(FileItem item : list) {
				 if(item.isFormField()) {
					 String fieldName = item.getFieldName();
					 if(fieldName.equals("ProgramName")) {
						 programName = item.getString("utf-8");
						 
						 request.setAttribute("programName","programName");
						 if(programName == null || programName.trim().equals("")) {
							 request.setAttribute("tip", "项目名称不能为空<meta http-equiv='refresh' content='3;url="+UI1ErrorPath +"'>");
							 request.getRequestDispatcher("/WEB-INF/jsp/error.jsp").forward(request, response);
							 return;
						 }
					 }
/*					 if(fieldName.equals("ProgramNo")) {
						 programNo = item.getString("utf-8");
						 if(programNo == null || programNo.trim().equals("")) {
							 request.setAttribute("tip", "项目编号不能为空<meta http-equiv='refresh' content='3;url="+UI1ErrorPath +"'>");
							 request.getRequestDispatcher("/WEB-INF/jsp/error.jsp").forward(request, response);
							 return;
						//吴道亮  2016.05.29↓ 添加
						 } else {
							 projectDao = new ProjectDao();
							 if(projectDao.query(programNo) != null) {
								 request.setAttribute("tip", "项目已经存在<meta http-equiv='refresh' content='3;url=" + UI1ErrorPath + "'>");
								 request.getRequestDispatcher("/WEB-INF/jsp/error.jsp").forward(request, response);
								 return;
							 }
						 }
						//吴道亮  2016.05.29↑ 添加
					 }*/
					 /*if(fieldName.equals("ProgramUserName")){
						 author = item.getString("utf-8");
						 if(author == null || author.trim().equals("")) {
							 request.setAttribute("tip", "项目负责人不能为空<meta http-equiv='refresh' content='3;url="+UI1ErrorPath +"'>");
							 request.getRequestDispatcher("/WEB-INF/jsp/error.jsp").forward(request, response);
							 return;
						 }
						
					 }*/
					/* if(fieldName.equals("ProgramMobileNumber")){
						 	phoneNumber = item.getString("utf-8");
						 if(phoneNumber == null || phoneNumber.trim().equals("")) {
							 request.setAttribute("tip", "项目负责人手机号码不能为空<meta http-equiv='refresh' content='3;url="+UI1ErrorPath +"'>");
							 request.getRequestDispatcher("/WEB-INF/jsp/error.jsp").forward(request, response);
							 return;
						 }else if(phoneNumber.length()!=11){
							 request.setAttribute("tip", "项目负责人手机号码长度不对<meta http-equiv='refresh' content='3;url="+UI1ErrorPath +"'>");
							 request.getRequestDispatcher("/WEB-INF/jsp/error.jsp").forward(request, response);
							 return;
							 
						 }
					 }*/
/*					 if(fieldName.equals("ProgramType")){
						 programType=item.getString("utf-8");
						 if(programType == null || programType.trim().equals("")) {
							 request.setAttribute("tip", "项目类型不能为空<meta http-equiv='refresh' content='3;url="+UI1ErrorPath +"'>");
							 request.getRequestDispatcher("/WEB-INF/jsp/error.jsp").forward(request, response);
							 return;
							 }
					 }
					 if(fieldName.equals("ProgramEmail")){
						 programemail=item.getString("utf-8");
						 if(programemail == null || programemail.trim().equals("")) {
							 request.setAttribute("tip", "项目负责人邮箱不能为空<meta http-equiv='refresh' content='3;url="+UI1ErrorPath +"'>");
							 request.getRequestDispatcher("/WEB-INF/jsp/error.jsp").forward(request, response);
							 return;
							 }
					 }*/
					 /*if(fieldName.equals("verifyCode")){
						 verifyCode = item.getString("utf-8");
						 if(verifyCode == null || verifyCode.trim().equals("")) {
							 request.setAttribute("tip", "验证码不能为空<meta http-equiv='refresh' content='3;url="+ UI1ErrorPath +"'>");
							 request.getRequestDispatcher("/WEB-INF/jsp/error.jsp").forward(request, response);
							 return;
						 } else if(!verifyCode.toUpperCase().equals(request.getSession().getAttribute("verifyCode"))){
							 request.setAttribute("tip", "验证码不正确<meta http-equiv='refresh' content='3;url="+ UI1ErrorPath +"'>");
							 request.getRequestDispatcher("/WEB-INF/jsp/error.jsp").forward(request, response);
							 return;
						 }
					 }*/
				 } else {
					 upload.setHeaderEncoding("utf-8");
					 String fileName = item.getName();
					 fileName = fileName.substring(fileName.lastIndexOf("\\") + 1);
					 String realPath = path + ConstCodeUtils.FILE_SPLIT + userNo;
					//吴道亮  2016.05.23↓ 删除
					 /*String ziprealpath =zippath+ "\\" + programNo ;
					 System.out.println(realPath);*/
					//吴道亮  2016.05.23↑ 删除
					 File file = new File(realPath);
					 if(!file.exists()) {
						 file.mkdir();
					 }
					//吴道亮  2016.05.23↓ 删除
					 /*File zipfile = new File(ziprealpath);
					 if(!zipfile.exists()){
						 zipfile.mkdir();
					 }*/
					//吴道亮  2016.05.23↑ 删除
					 QueryUserService queryUser = new QueryUserService();
					 author=queryUser.query(userNo);
					 String realFileName = userNo + "-" + programName + "-" + author + "." + fileName.split("\\.")[fileName.split("\\.").length - 1];
					 String savePath = realPath + ConstCodeUtils.FILE_SPLIT + new String(realFileName.getBytes(), "utf-8");
					//吴道亮  2016.05.23↓ 删除
					 /*String zipsavepath = ziprealpath+ "\\" + realFileName;*/
					//吴道亮  2016.05.23↑ 删除
					 if(fileName.split("\\.")[fileName.split("\\.").length - 1].equals("docx") || fileName.split("\\.")[fileName.split("\\.").length - 1].equals("doc")){
						 FileOutputStream out = new FileOutputStream(savePath);
						 InputStream in = item.getInputStream();
						 byte[] buffer = new byte[1024];
						 int len = 0;
						 while((len=in.read(buffer)) > 0) {
							 out.write(buffer, 0, len);
						 }
						 out.close();
						 in.close();
						//吴道亮  2016.05.23↓ 删除
						 /*FileOutputStream zipout = new FileOutputStream(zipsavepath);
						 InputStream zipin = item.getInputStream();
						 byte[] zipbuffer = new byte[1024];
						 int ziplen = 0;
						 while((ziplen=zipin.read(zipbuffer)) > 0) {
							 zipout.write(zipbuffer, 0, ziplen);
						 }
						 zipout.close();
						 zipin.close();*/
						
						 //AddProjectFileService addProjectFileService =new AddProjectFileService();
						//吴道亮  2016.05.23↑ 删除
						 ProjectBean projectBean = new ProjectBean();
						 projectBean.setUserNo(userNo);
						 projectBean.setProjectName(programName);
						 projectBean.setProjectFile(savePath);
						//吴道亮  2016.05.29↓ 删除
						 /*QueryProjectService queryProjectService=new QueryProjectService();
						 AdminProjectBean adminProjectBean=queryProjectService.AdminProjectId(programNo);
						 if(adminProjectBean!=null){
						 //String newProgramNo = adminProjectBean.getProjectId();
					     String newPath = adminProjectBean.getPath();
					     ProjectDao projectDao = new ProjectDao();
						 projectDao.updateProject(projectBean);
						 }else{
							 if(addProjectFileService.addProject(projectBean)){
								
								 System.out.println("写入数据库");
							 }
						 }*/
						//吴道亮  2016.05.29↑ 删除
						/* ProjectFileBean projectFileBean = new ProjectFileBean();
						 projectFileBean.setProjectId(programNo);
						 projectFileBean.setProjectFile(savePath)*/;
						//吴道亮  2016.05.29↓ 删除
						 /*if(adminProjectBean!=null) {
							 ProjectFileDao projectFileDao = new ProjectFileDao();
							 projectFileDao.updateProjectFile(projectFileBean);
						 }else{
							 if(addProjectFileService.add(projectFileBean)){
									System.out.println("写入数据库");
								 }
						 }*/
						//吴道亮  2016.05.29↑ 删除
						 SendMailService sendMailService = new SendMailService(userNo + "-" + programName + "-" + author, ConstCodeUtils.CONTENT_FILE, projectBean.getProjectFile());
					     if(!sendMailService.execute()) {
					    	 request.setAttribute("tip", "服务器忙请重试<meta http-equiv='refresh' content='3;url="+ UI1ErrorPath +"'>");
							 request.getRequestDispatcher("/WEB-INF/jsp/error.jsp").forward(request, response);
							 return;
					     } else {
					    	//吴道亮  2016.05.29↓ 添加
							 if(projectDao.updateProjectFile(projectBean)) {
							  fileState = 1;
							  projectBean.setFileState(fileState);
							  int changeState = 0;
							  projectBean.setChangeState(changeState);
							  if(projectDao.updatefileState(projectBean)) {
								  System.out.println("项目数据库状态读入成功");
							  } else {
								  request.setAttribute("tip", "文档上传状态信息存入数据库失败<meta http-equiv='refresh' content='3;url="+ UI1ErrorPath+"'>");
							      request.getRequestDispatcher("/WEB-INF/jsp/error.jsp").forward(request, response);
							  } if(projectDao.updatechangeState(projectBean)) {
								  System.out.println("修改状态读入成功");
							  } else {
								  request.setAttribute("tip", "修改状态信息存入数据库失败<meta http-equiv='refresh' content='3;url="+ UI1ErrorPath+"'>");
							      request.getRequestDispatcher("/WEB-INF/jsp/error.jsp").forward(request, response);
							  }
							 } else {
								 request.setAttribute("tip", "项目信息存入数据库失败<meta http-equiv='refresh' content='3;url="+ UI1ErrorPath+"'>");
								 request.getRequestDispatcher("/WEB-INF/jsp/error.jsp").forward(request, response);
							 }
							 //吴道亮  2016.05.29↑ 添加
					     }
					 }else{
						 request.setAttribute("tip", "上传格式不正确<meta http-equiv='refresh' content='3;url="+ UI1ErrorPath +"'>");
						 request.getRequestDispatcher("/WEB-INF/jsp/error.jsp").forward(request, response);
					 }
				 }
			 }
		} catch (FileUploadException e1) {
			e1.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		//吴道亮  2016.05.29↓ 删除
		request.setAttribute("tip", "提交成功<meta http-equiv='refresh' content='3;url="+ UI1SuccessPath+"'>");
		request.getRequestDispatcher("/WEB-INF/jsp/success.jsp").forward(request, response);
		//吴道亮  2016.05.29↑ 删除
	}
	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
		
	}

}